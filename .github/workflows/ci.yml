name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run type check
      run: npx tsc --noEmit

    - name: Build project
      run: npm run build

    - name: Check build artifacts
      run: |
        ls -la dist/
        test -f dist/nodes/YandexGPT/YandexGPT.node.js
        test -f dist/credentials/YandexGPTApi.credentials.js

  security:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level moderate

    - name: Check for vulnerabilities
      run: npm audit --production

  release:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Bump version and create tag
      id: version
      run: |
        npm version patch
        echo "new_version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

    - name: Push changes
      run: |
        git push
        git push --tags

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.new_version }}
        release_name: Release v${{ steps.version.outputs.new_version }}
        body: |
          ## Changes in v${{ steps.version.outputs.new_version }}

          - Automated release from CI/CD pipeline
          - See commit history for detailed changes
        draft: false
        prerelease: false

    - name: Publish to NPM
      if: success()
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
